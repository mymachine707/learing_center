// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/lesson": {
            "get": {
                "description": "Creat a new person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lesson"
                ],
                "summary": "Get Lesson By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lesson body",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Lesson"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creat a new person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lesson"
                ],
                "summary": "Creat Lesson",
                "parameters": [
                    {
                        "description": "Lesson body",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateLessonModels"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Lesson"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/lesson/": {
            "get": {
                "description": "GetLessonList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lesson"
                ],
                "summary": "List Lesson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search exapmle",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Lesson"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update Lesson",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lesson"
                ],
                "summary": "Update Lesson",
                "parameters": [
                    {
                        "description": "Lesson body",
                        "name": "lesson",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateLessonModels"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Lesson"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/lesson/{id}": {
            "delete": {
                "description": "get lesson by id and delete this lesson",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lesson"
                ],
                "summary": "Delete Lesson",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lesson id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Lesson"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/person": {
            "post": {
                "description": "Creat a new person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Creat Person",
                "parameters": [
                    {
                        "description": "Person body",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePersonModul"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Person"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/person/": {
            "get": {
                "description": "GetPersonList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "List Person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search exapmle",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Person"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update Person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Update Person",
                "parameters": [
                    {
                        "description": "Person body",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePersonModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Person"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/person/{id}": {
            "get": {
                "description": "get an person by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "GetPersonyID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Person"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "get person by id and delete this person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Delete Person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Person"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateLessonModels": {
            "type": "object",
            "required": [
                "LearingCenterName",
                "Price",
                "coursename"
            ],
            "properties": {
                "LearingCenterName": {
                    "type": "string"
                },
                "Price": {
                    "type": "integer"
                },
                "coursename": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "GOLANG"
                }
            }
        },
        "models.CreatePersonModul": {
            "type": "object",
            "required": [
                "birthday",
                "firstname",
                "job",
                "lastname",
                "middlename",
                "phoneNumber"
            ],
            "properties": {
                "birthday": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "09-05-1998"
                },
                "firstname": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Islombek"
                },
                "job": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Administrator"
                },
                "lastname": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Oripov"
                },
                "middlename": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Erkinjon_o'g'li"
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "94-650-61-84"
                }
            }
        },
        "models.JSONErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.JSONResult": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Lesson": {
            "type": "object",
            "required": [
                "LearingCenterName",
                "Price",
                "coursename",
                "id"
            ],
            "properties": {
                "LearingCenterName": {
                    "type": "string"
                },
                "Price": {
                    "type": "integer"
                },
                "coursename": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "GOLANG"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Person": {
            "type": "object",
            "required": [
                "birthday",
                "firstname",
                "id",
                "job",
                "lastname",
                "middlename",
                "phoneNumber"
            ],
            "properties": {
                "birthday": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "09-05-1998"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Islombek"
                },
                "id": {
                    "type": "string"
                },
                "job": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Administrator"
                },
                "lastname": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Oripov"
                },
                "middlename": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Erkinjon_o'g'li"
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "94-650-61-84"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UpdateLessonModels": {
            "type": "object",
            "required": [
                "Price",
                "coursename",
                "id"
            ],
            "properties": {
                "Price": {
                    "type": "integer"
                },
                "coursename": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "GOLANG"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "models.UpdatePersonModel": {
            "type": "object",
            "required": [
                "birthday",
                "firstname",
                "id",
                "job",
                "lastname",
                "middlename",
                "phoneNumber"
            ],
            "properties": {
                "birthday": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "09-05-1998"
                },
                "firstname": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Islombek"
                },
                "id": {
                    "type": "string"
                },
                "job": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Administrator"
                },
                "lastname": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Oripov"
                },
                "middlename": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Erkinjon_o'g'li"
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "94-650-61-84"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
